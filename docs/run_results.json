{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.3", "generated_at": "2024-05-14T15:58:07.570788Z", "invocation_id": "9f93feb7-8aa4-4955-a072-14cbdee71eac", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.374856Z", "completed_at": "2024-05-14T15:58:06.383145Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.391408Z", "completed_at": "2024-05-14T15:58:06.391421Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017837047576904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ap_bill_item_tmp", "compiled": true, "compiled_code": "\n\nselect * from \"postgres\".\"sage_intacct_integration_tests_3\".\"sage_intacct__ap_bill_item\"", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.383979Z", "completed_at": "2024-05-14T15:58:06.392395Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.394472Z", "completed_at": "2024-05-14T15:58:06.394476Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014594793319702148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ap_bill_tmp", "compiled": true, "compiled_code": "\n\nselect * from \"postgres\".\"sage_intacct_integration_tests_3\".\"sage_intacct__ap_bill\"", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.386835Z", "completed_at": "2024-05-14T15:58:06.392680Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.394980Z", "completed_at": "2024-05-14T15:58:06.394984Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014876127243041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ar_invoice_item_tmp", "compiled": true, "compiled_code": "\n\nselect * from \"postgres\".\"sage_intacct_integration_tests_3\".\"sage_intacct__ar_invoice_item\"", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.389183Z", "completed_at": "2024-05-14T15:58:06.393471Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.396312Z", "completed_at": "2024-05-14T15:58:06.396317Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018777132034301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ar_invoice_tmp", "compiled": true, "compiled_code": "\n\nselect * from \"postgres\".\"sage_intacct_integration_tests_3\".\"sage_intacct__ar_invoice\"", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.397141Z", "completed_at": "2024-05-14T15:58:06.402831Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.407287Z", "completed_at": "2024-05-14T15:58:06.407293Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017030000686645508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_account_tmp", "compiled": true, "compiled_code": "select * from \"postgres\".\"sage_intacct_integration_tests_3\".\"sage_intacct__gl_account\"", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_account_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.409670Z", "completed_at": "2024-05-14T15:58:06.410633Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.412401Z", "completed_at": "2024-05-14T15:58:06.412406Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009901046752929688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_integration_tests.sage_intacct__ap_bill", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.404684Z", "completed_at": "2024-05-14T15:58:06.412047Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.414591Z", "completed_at": "2024-05-14T15:58:06.414596Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015021800994873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_batch_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"sage_intacct_integration_tests_3\".\"sage_intacct__gl_batch\"", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_batch_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.407555Z", "completed_at": "2024-05-14T15:58:06.412684Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.415163Z", "completed_at": "2024-05-14T15:58:06.415166Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015002012252807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_detail_tmp", "compiled": true, "compiled_code": "select * from \"postgres\".\"sage_intacct_integration_tests_3\".\"sage_intacct__gl_detail\"", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_detail_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.415448Z", "completed_at": "2024-05-14T15:58:06.416491Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.419753Z", "completed_at": "2024-05-14T15:58:06.419758Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009490251541137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_integration_tests.sage_intacct__ap_bill_item", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.420556Z", "completed_at": "2024-05-14T15:58:06.421615Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.425883Z", "completed_at": "2024-05-14T15:58:06.425888Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010695934295654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_integration_tests.sage_intacct__ar_invoice", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.423716Z", "completed_at": "2024-05-14T15:58:06.425561Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.428821Z", "completed_at": "2024-05-14T15:58:06.428825Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010842084884643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_integration_tests.sage_intacct__ar_invoice_item", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.426140Z", "completed_at": "2024-05-14T15:58:06.427057Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.429311Z", "completed_at": "2024-05-14T15:58:06.429313Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009839057922363281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_integration_tests.sage_intacct__gl_account", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.429569Z", "completed_at": "2024-05-14T15:58:06.430507Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.432976Z", "completed_at": "2024-05-14T15:58:06.432979Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007995128631591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_integration_tests.sage_intacct__gl_batch", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.433595Z", "completed_at": "2024-05-14T15:58:06.434560Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.443859Z", "completed_at": "2024-05-14T15:58:06.443865Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01735687255859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_integration_tests.sage_intacct__gl_detail", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.436484Z", "completed_at": "2024-05-14T15:58:06.695066Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.695682Z", "completed_at": "2024-05-14T15:58:06.695690Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.285247802734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ap_bill_item", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill_item_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountkey\n    \n as \n    \n    accountkey\n    \n, \n    \n    \n    accountno\n    \n as \n    \n    accountno\n    \n, \n    \n    \n    accounttitle\n    \n as \n    \n    accounttitle\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    basecurr\n    \n as \n    \n    basecurr\n    \n, \n    \n    \n    baselocation\n    \n as \n    \n    baselocation\n    \n, \n    \n    \n    billable\n    \n as \n    \n    billable\n    \n, \n    \n    \n    billed\n    \n as \n    \n    billed\n    \n, \n    \n    \n    classid\n    \n as \n    \n    classid\n    \n, \n    \n    \n    classname\n    \n as \n    \n    classname\n    \n, \n    \n    \n    createdby\n    \n as \n    \n    createdby\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customerid\n    \n as \n    \n    customerid\n    \n, \n    \n    \n    customername\n    \n as \n    \n    customername\n    \n, \n    \n    \n    departmentid\n    \n as \n    \n    departmentid\n    \n, \n    \n    \n    departmentname\n    \n as \n    \n    departmentname\n    \n, \n    \n    \n    entry_date\n    \n as \n    \n    entry_date\n    \n, \n    \n    \n    entrydescription\n    \n as \n    \n    entrydescription\n    \n, \n    \n    \n    exchange_rate\n    \n as \n    \n    exchange_rate\n    \n, \n    \n    \n    itemid\n    \n as \n    \n    itemid\n    \n, \n    \n    \n    itemname\n    \n as \n    \n    itemname\n    \n, \n    \n    \n    line_no\n    \n as \n    \n    line_no\n    \n, \n    \n    \n    lineitem\n    \n as \n    \n    lineitem\n    \n, \n    \n    \n    locationid\n    \n as \n    \n    locationid\n    \n, \n    \n    \n    locationname\n    \n as \n    \n    locationname\n    \n, \n    \n    \n    offsetglaccountno\n    \n as \n    \n    offsetglaccountno\n    \n, \n    \n    \n    offsetglaccounttitle\n    \n as \n    \n    offsetglaccounttitle\n    \n, \n    \n    \n    projectid\n    \n as \n    \n    projectid\n    \n, \n    \n    \n    projectname\n    \n as \n    \n    projectname\n    \n, \n    \n    \n    recordkey\n    \n as \n    \n    recordkey\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    totalselected\n    \n as \n    \n    totalselected\n    \n, \n    \n    \n    vendorid\n    \n as \n    \n    vendorid\n    \n, \n    \n    \n    vendorname\n    \n as \n    \n    vendorname\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(recordkey as TEXT) as bill_id,\n        cast(recordno as TEXT) as bill_item_id,\n        _fivetran_synced,\n        accountkey as account_key,\n        accountno as account_no,\n        accounttitle as account_title,\n        amount, \n        basecurr as base_curr,\n        baselocation as base_location,\n        billable, \n        billed,\n        cast(classid as TEXT) as class_id,\n        classname as class_name,\n        createdby as created_by,\n        currency,\n        customerid as customer_id,\n        customername as customer_name,\n        cast(departmentid as TEXT) as department_id,\n        departmentname as department_name,\n        entry_date as entry_date_at,\n        entrydescription as entry_description,\n        exchange_rate,\n        cast(itemid as TEXT) as item_id,\n        itemname as item_name,\n        line_no,\n        lineitem as line_item,\n        cast(locationid as TEXT) as location_id,\n        locationname as location_name,\n        offsetglaccountno as offset_gl_account_no,\n        offsetglaccounttitle as offset_gl_account_title,\n        recordtype as record_type,\n        state,\n        totalpaid as total_item_paid,\n        totalselected as total_selected,\n        vendorid as vendor_id,\n        vendorname as vendor_name,\n        whencreated as created_at,\n        whenmodified as modified_at,\n        projectname as project_name,\n        projectid as project_id\n\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.450007Z", "completed_at": "2024-05-14T15:58:06.777210Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.778874Z", "completed_at": "2024-05-14T15:58:06.778877Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.352675199508667, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ar_invoice_item", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice_item_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountkey\n    \n as \n    \n    accountkey\n    \n, \n    \n    \n    accountno\n    \n as \n    \n    accountno\n    \n, \n    \n    \n    accounttitle\n    \n as \n    \n    accounttitle\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    basecurr\n    \n as \n    \n    basecurr\n    \n, \n    \n    \n    baselocation\n    \n as \n    \n    baselocation\n    \n, \n    \n    \n    classid\n    \n as \n    \n    classid\n    \n, \n    \n    \n    classname\n    \n as \n    \n    classname\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customerid\n    \n as \n    \n    customerid\n    \n, \n    \n    \n    customername\n    \n as \n    \n    customername\n    \n, \n    \n    \n    departmentid\n    \n as \n    \n    departmentid\n    \n, \n    \n    \n    departmentname\n    \n as \n    \n    departmentname\n    \n, \n    \n    \n    entry_date\n    \n as \n    \n    entry_date\n    \n, \n    \n    \n    entrydescription\n    \n as \n    \n    entrydescription\n    \n, \n    \n    \n    exchange_rate\n    \n as \n    \n    exchange_rate\n    \n, \n    \n    \n    itemid\n    \n as \n    \n    itemid\n    \n, \n    \n    \n    itemname\n    \n as \n    \n    itemname\n    \n, \n    \n    \n    line_no\n    \n as \n    \n    line_no\n    \n, \n    \n    \n    lineitem\n    \n as \n    \n    lineitem\n    \n, \n    \n    \n    locationid\n    \n as \n    \n    locationid\n    \n, \n    \n    \n    locationname\n    \n as \n    \n    locationname\n    \n, \n    \n    \n    offsetglaccountno\n    \n as \n    \n    offsetglaccountno\n    \n, \n    \n    \n    offsetglaccounttitle\n    \n as \n    \n    offsetglaccounttitle\n    \n, \n    \n    \n    recordkey\n    \n as \n    \n    recordkey\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    totalselected\n    \n as \n    \n    totalselected\n    \n, \n    \n    \n    vendorid\n    \n as \n    \n    vendorid\n    \n, \n    \n    \n    vendorname\n    \n as \n    \n    vendorname\n    \n, \n    \n    \n    warehouseid\n    \n as \n    \n    warehouseid\n    \n, \n    \n    \n    warehousename\n    \n as \n    \n    warehousename\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(recordkey as TEXT) as invoice_id,\n        cast(recordno as TEXT) as invoice_item_id,\n        _fivetran_synced,\n        accountkey as account_key,\n        accountno as account_no,\n        accounttitle as account_title,\n        amount,\n        basecurr as base_curr,\n        baselocation as base_location,\n        cast(classid as TEXT) as class_id,\n        classname as class_name,\n        currency,\n        customerid as customer_id,\n        customername as customer_name,\n        cast(departmentid as TEXT) as department_id,\n        departmentname as department_name,\n        entry_date as entry_date_at,\n        entrydescription as entry_description,\n        exchange_rate as exchange_rate,\n        cast(itemid as TEXT) as item_id,\n        itemname as item_name,\n        line_no as line_no,\n        lineitem as line_item,\n        cast(locationid as TEXT) as location_id,\n        locationname as location_name,\n        offsetglaccountno as offset_gl_account_no,\n        offsetglaccounttitle as offset_gl_account_title,\n        recordtype as record_type,\n        state,\n        totalpaid as total_item_paid,\n        totalselected as total_selected,\n        vendorid as vendor_id,\n        vendorname as vendor_name,\n        whencreated as created_at,\n        whenmodified as modified_at,\n        warehouseid as warehouse_id,\n        warehousename as warehouse_name\n\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.455546Z", "completed_at": "2024-05-14T15:58:06.777769Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.779366Z", "completed_at": "2024-05-14T15:58:06.779369Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3531949520111084, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ar_invoice", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    auwhencreated\n    \n as \n    \n    auwhencreated\n    \n, \n    cast(null as TEXT) as \n    \n    basecurr\n    \n , \n    \n    \n    billtopaytocontactname\n    \n as \n    \n    billtopaytocontactname\n    \n, \n    \n    \n    billtopaytokey\n    \n as \n    \n    billtopaytokey\n    \n, \n    \n    \n    createdby\n    \n as \n    \n    createdby\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customerid\n    \n as \n    \n    customerid\n    \n, \n    \n    \n    customername\n    \n as \n    \n    customername\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    docnumber\n    \n as \n    \n    docnumber\n    \n, \n    \n    \n    due_in_days\n    \n as \n    \n    due_in_days\n    \n, \n    \n    \n    megaentityid\n    \n as \n    \n    megaentityid\n    \n, \n    \n    \n    megaentityname\n    \n as \n    \n    megaentityname\n    \n, \n    \n    \n    recordid\n    \n as \n    \n    recordid\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    shiptoreturntocontactname\n    \n as \n    \n    shiptoreturntocontactname\n    \n, \n    \n    \n    shiptoreturntokey\n    \n as \n    \n    shiptoreturntokey\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    totaldue\n    \n as \n    \n    totaldue\n    \n, \n    \n    \n    totalentered\n    \n as \n    \n    totalentered\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    cast(null as date) as \n    \n    whendiscount\n    \n , \n    \n    \n    whendue\n    \n as \n    \n    whendue\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n, \n    \n    \n    whenpaid\n    \n as \n    \n    whenpaid\n    \n, \n    \n    \n    whenposted\n    \n as \n    \n    whenposted\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(recordno as TEXT) as invoice_id,\n        _fivetran_deleted,\n        _fivetran_synced,\n        auwhencreated as au_created_at,\n        billtopaytocontactname as bill_to_pay_to_contact_name,\n        billtopaytokey as bill_to_pay_to_key,\n        createdby as created_by,\n        currency,\n        customerid as customer_id,\n        customername as customer_name,\n        description,\n        docnumber as doc_number,\n        due_in_days as due_in_days,\n        megaentityid as mega_entity_id,\n        megaentityname as mega_entity_name,\n        recordid as record_id,\n        recordtype as record_type,\n        shiptoreturntocontactname as ship_to_return_to_contact_name,\n        shiptoreturntokey as ship_to_return_to_key,\n        state,\n        totaldue as total_due,\n        totalentered as total_entered,\n        totalpaid as total_paid,\n        whencreated as created_at,\n        whendue as due_at,\n        whenmodified as modified_at,\n        whenpaid as paid_at,\n        whenposted as posted_at\n\n    from fields\n)\n\nselect * from final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.444157Z", "completed_at": "2024-05-14T15:58:06.776814Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.778343Z", "completed_at": "2024-05-14T15:58:06.778350Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.37294697761535645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ap_bill", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    auwhencreated\n    \n as \n    \n    auwhencreated\n    \n, \n    \n    \n    basecurr\n    \n as \n    \n    basecurr\n    \n, \n    \n    \n    billtopaytocontactname\n    \n as \n    \n    billtopaytocontactname\n    \n, \n    \n    \n    billtopaytokey\n    \n as \n    \n    billtopaytokey\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    docnumber\n    \n as \n    \n    docnumber\n    \n, \n    \n    \n    due_in_days\n    \n as \n    \n    due_in_days\n    \n, \n    \n    \n    recordid\n    \n as \n    \n    recordid\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    shiptoreturntocontactname\n    \n as \n    \n    shiptoreturntocontactname\n    \n, \n    \n    \n    shiptoreturntokey\n    \n as \n    \n    shiptoreturntokey\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    totaldue\n    \n as \n    \n    totaldue\n    \n, \n    \n    \n    totalentered\n    \n as \n    \n    totalentered\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    vendorid\n    \n as \n    \n    vendorid\n    \n, \n    \n    \n    vendorname\n    \n as \n    \n    vendorname\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whendue\n    \n as \n    \n    whendue\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n, \n    \n    \n    whenpaid\n    \n as \n    \n    whenpaid\n    \n, \n    \n    \n    whenposted\n    \n as \n    \n    whenposted\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(recordno as TEXT) as bill_id,\n        _fivetran_deleted,\n        _fivetran_synced,\n        auwhencreated as au_created_at,\n        billtopaytocontactname as bill_to_pay_to_contact_name,\n        billtopaytokey as bill_to_pay_to_key,\n        currency,\n        description,\n        docnumber as doc_number,\n        due_in_days as due_in_days,\n        recordid as record_id,\n        recordtype as record_type,\n        shiptoreturntocontactname as ship_to_return_to_contact_name,\n        shiptoreturntokey as ship_to_return_to_key,\n        state,\n        totaldue as total_due,\n        totalentered as total_entered,\n        totalpaid as total_paid,\n        vendorid as vendor_id,\n        vendorname as vendor_name,\n        whencreated as created_at,\n        whendue as due_at,\n        whenmodified as modified_at,\n        whenpaid as paid_at,\n        whenposted as posted_at\n\n    from fields\n)\n\nselect * from final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.814394Z", "completed_at": "2024-05-14T15:58:06.822011Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.822543Z", "completed_at": "2024-05-14T15:58:06.822549Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01373600959777832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__ap_bill_item_bill_item_id.b04aef5c32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect bill_item_id\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill_item\"\nwhere bill_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.824210Z", "completed_at": "2024-05-14T15:58:06.828187Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.828709Z", "completed_at": "2024-05-14T15:58:06.828714Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005532026290893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__ap_bill_item_bill_item_id.2260e805c7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    bill_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill_item\"\nwhere bill_item_id is not null\ngroup by bill_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.830323Z", "completed_at": "2024-05-14T15:58:06.833123Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.833639Z", "completed_at": "2024-05-14T15:58:06.833644Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004328250885009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__ar_invoice_item_invoice_item_id.8484540965", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_item_id\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice_item\"\nwhere invoice_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.835227Z", "completed_at": "2024-05-14T15:58:06.837955Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.838465Z", "completed_at": "2024-05-14T15:58:06.838469Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004286050796508789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__ar_invoice_item_invoice_item_id.ae8a6fe24c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    invoice_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice_item\"\nwhere invoice_item_id is not null\ngroup by invoice_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.840095Z", "completed_at": "2024-05-14T15:58:06.849047Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.849598Z", "completed_at": "2024-05-14T15:58:06.849604Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010512828826904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.sage_intacct__ap_ar_enhanced", "compiled": true, "compiled_code": "\n\nwith\n\n\nap_bill as (\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill\" \n), \n\nap_bill_item as (\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill_item\" \n),\n\n\n\nar_invoice as (\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice\" \n),\n\nar_invoice_item as (\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice_item\" \n),\n\n\n\nap_bill_enhanced as (\n    select\n        ap_bill_item.bill_id,\n        ap_bill_item.bill_item_id,\n        cast(null as TEXT) as invoice_id,\n        cast(null as TEXT) as invoice_item_id,\n        cast(ap_bill_item.account_no as TEXT) as account_no,\n        ap_bill_item.account_title,\n        ap_bill_item.amount,\n        ap_bill_item.class_id,\n        ap_bill_item.class_name,\n        ap_bill_item.currency,\n        ap_bill_item.customer_id,\n        ap_bill_item.customer_name,\n        ap_bill_item.department_id,\n        ap_bill_item.department_name,\n        ap_bill_item.entry_date_at,\n        ap_bill_item.entry_description,\n        ap_bill_item.item_id,\n        ap_bill_item.item_name,\n        ap_bill_item.line_no,\n        ap_bill_item.line_item,\n        ap_bill_item.location_id,\n        ap_bill_item.location_name,\n        ap_bill_item.offset_gl_account_no,\n        ap_bill_item.offset_gl_account_title,\n        ap_bill_item.total_item_paid,\n        ap_bill_item.vendor_id,\n        ap_bill_item.vendor_name,\n        ap_bill_item.created_at,\n        ap_bill_item.modified_at,\n        ap_bill.due_in_days,\n        ap_bill.total_due,\n        ap_bill.total_entered,\n        ap_bill.total_paid,\n        ap_bill.record_id,\n        count(*) over (partition by ap_bill_item.bill_id) as number_of_items\n    from ap_bill_item\n    \n    left join ap_bill\n        on ap_bill_item.bill_id = ap_bill.bill_id\n), \n\n\n\n    ar_invoice_enhanced as (\n    select \n        cast(null as TEXT) as bill_id,\n        cast(null as TEXT) as bill_item_id,\n        ar_invoice_item.invoice_id,\n        ar_invoice_item.invoice_item_id,\n        cast(ar_invoice_item.account_no as TEXT) as account_no,\n        ar_invoice_item.account_title,\n        ar_invoice_item.amount,\n        ar_invoice_item.class_id,\n        ar_invoice_item.class_name,\n        ar_invoice_item.currency,\n        ar_invoice_item.customer_id,\n        ar_invoice_item.customer_name,\n        ar_invoice_item.department_id,\n        ar_invoice_item.department_name,\n        ar_invoice_item.entry_date_at,\n        ar_invoice_item.entry_description,\n        ar_invoice_item.item_id,\n        ar_invoice_item.item_name,\n        ar_invoice_item.line_no,\n        ar_invoice_item.line_item,\n        ar_invoice_item.location_id,\n        ar_invoice_item.location_name,\n        ar_invoice_item.offset_gl_account_no,\n        ar_invoice_item.offset_gl_account_title,\n        ar_invoice_item.total_item_paid,\n        ar_invoice_item.vendor_id,\n        ar_invoice_item.vendor_name,\n        ar_invoice_item.created_at,\n        ar_invoice_item.modified_at,\n        ar_invoice.due_in_days,\n        ar_invoice.total_due,\n        ar_invoice.total_entered,\n        ar_invoice.total_paid,\n        ar_invoice.record_id,\n        count(*) over (partition by ar_invoice_item.invoice_id) as number_of_items\n\n        from ar_invoice_item\n        left join ar_invoice\n            on ar_invoice_item.invoice_id = ar_invoice.invoice_id\n    ),\n\n\n\nap_ar_enhanced as (\n    \n    select * \n    from ap_bill_enhanced\n    \n\n    \n    \n    union all\n    \n\n    \n    select * \n    from ar_invoice_enhanced\n    \n\n), \n\n\nfinal as (\n    select \n        coalesce(\n                 bill_id \n                \n                \n                ,\n                \n                \n                 invoice_id \n        ,null) as document_id,\n        coalesce(\n                 bill_item_id \n                \n                \n                , \n                \n\n                  invoice_item_id  \n        ,null) as document_item_id,\n        case \n             when bill_id is not null then 'bill'  \n             when invoice_id is not null then 'invoice'  \n        end as document_type,\n        entry_date_at,\n        entry_description,\n        amount,\n        currency,\n        due_in_days,\n        item_id,\n        item_name,\n        line_no,\n        line_item, \n        customer_id,\n        customer_name,\n        department_id,\n        department_name,\n        location_id,\n        location_name,\n        vendor_id,\n        vendor_name,\n        account_no,\n        account_title,\n        class_id,\n        class_name,\n        created_at,\n        modified_at,\n        total_due,\n        total_entered,\n        total_paid,\n        number_of_items,\n        total_item_paid,\n        offset_gl_account_no,\n        offset_gl_account_title,\n        record_id\n    from ap_ar_enhanced\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__ap_ar_enhanced\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.851303Z", "completed_at": "2024-05-14T15:58:06.854711Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.855209Z", "completed_at": "2024-05-14T15:58:06.855213Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004911899566650391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__ap_bill_bill_id.fe38d18a79", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect bill_id\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill\"\nwhere bill_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.856772Z", "completed_at": "2024-05-14T15:58:06.859633Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.860150Z", "completed_at": "2024-05-14T15:58:06.860155Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004368782043457031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__ar_invoice_invoice_id.77d5f96cb9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_id\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice\"\nwhere invoice_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.861718Z", "completed_at": "2024-05-14T15:58:06.864335Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.864826Z", "completed_at": "2024-05-14T15:58:06.864830Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004091024398803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__ap_bill_bill_id.e2a5df2046", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    bill_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ap_bill\"\nwhere bill_id is not null\ngroup by bill_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.866345Z", "completed_at": "2024-05-14T15:58:06.868910Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.869406Z", "completed_at": "2024-05-14T15:58:06.869410Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0040400028228759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__ar_invoice_invoice_id.fd61e50a78", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    invoice_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__ar_invoice\"\nwhere invoice_id is not null\ngroup by invoice_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.870957Z", "completed_at": "2024-05-14T15:58:06.873706Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.874180Z", "completed_at": "2024-05-14T15:58:06.874184Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004173755645751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct.not_null_sage_intacct__ap_ar_enhanced_document_item_id.cd073da0a5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect document_item_id\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__ap_ar_enhanced\"\nwhere document_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.875711Z", "completed_at": "2024-05-14T15:58:06.879235Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.879728Z", "completed_at": "2024-05-14T15:58:06.879732Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0050089359283447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct.unique_sage_intacct__ap_ar_enhanced_document_item_id.c1f6a38e7e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    document_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__ap_ar_enhanced\"\nwhere document_item_id is not null\ngroup by document_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.719879Z", "completed_at": "2024-05-14T15:58:06.975941Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:06.976516Z", "completed_at": "2024-05-14T15:58:06.976523Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.28203535079956055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_account", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_account_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountno\n    \n as \n    \n    accountno\n    \n, \n    \n    \n    accounttype\n    \n as \n    \n    accounttype\n    \n, \n    \n    \n    alternativeaccount\n    \n as \n    \n    alternativeaccount\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    categorykey\n    \n as \n    \n    categorykey\n    \n, \n    \n    \n    closetoacctkey\n    \n as \n    \n    closetoacctkey\n    \n, \n    \n    \n    closingaccountno\n    \n as \n    \n    closingaccountno\n    \n, \n    \n    \n    closingaccounttitle\n    \n as \n    \n    closingaccounttitle\n    \n, \n    \n    \n    closingtype\n    \n as \n    \n    closingtype\n    \n, \n    \n    \n    createdby\n    \n as \n    \n    createdby\n    \n, \n    \n    \n    modifiedby\n    \n as \n    \n    modifiedby\n    \n, \n    \n    \n    normalbalance\n    \n as \n    \n    normalbalance\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    cast(null as boolean) as \n    \n    requireclass\n    \n , \n    cast(null as boolean) as \n    \n    requirecustomer\n    \n , \n    cast(null as boolean) as \n    \n    requiredept\n    \n , \n    cast(null as boolean) as \n    \n    requireemployee\n    \n , \n    cast(null as boolean) as \n    \n    requireitem\n    \n , \n    cast(null as boolean) as \n    \n    requireloc\n    \n , \n    cast(null as boolean) as \n    \n    requireproject\n    \n , \n    cast(null as boolean) as \n    \n    requirevendor\n    \n , \n    cast(null as boolean) as \n    \n    requirewarehouse\n    \n , \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    taxable\n    \n as \n    \n    taxable\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n\n\n\n        --The below script allows for pass through columns.\n        \n\n    from base\n),\n\nfinal as (\n    \n    select \n        cast(accountno as TEXT) as account_no,\n        _fivetran_deleted,\t\n        _fivetran_synced,\t\n        accounttype as account_type,\t\n        alternativeaccount as alternative_account,\t\n        category,\t\n        categorykey as category_key,\t\n        closetoacctkey as close_to_acct_key,\t\n        closingaccountno as closing_account_no,\t\n        closingaccounttitle as closing_account_title,\t\n        closingtype as closing_type,\t\n        createdby as created_by,\t\n        modifiedby as modified_by,\t\n        normalbalance as normal_balance,\t\n        recordno as gl_account_id,\t\n        status,\t\n        taxable,\t\n        title,\t\n        whencreated as created_at,\t\n        whenmodified as modified_at\t\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_account\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.003843Z", "completed_at": "2024-05-14T15:58:07.010550Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.011102Z", "completed_at": "2024-05-14T15:58:07.011109Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009645938873291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.int_sage_intacct__account_classifications", "compiled": true, "compiled_code": "with gl_account as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_account\"\n), \n\nfinal as (\n    select\n        account_no,\n        account_type,\n        category,\n        closing_account_title,\n        case\n            when category in ('Inventory','Fixed Assets','Other Current Assets','Cash and Cash Equivalents','Intercompany Receivable','Accounts Receivable','Deposits and Prepayments','Goodwill','Intangible Assets','Short-Term Investments','Inventory','Accumulated Depreciation','Other Assets','Unrealized Currency Gain/Loss','Patents','Investment in Subsidiary','Escrows and Reserves','Long Term Investments') then 'Asset'\n            when category in ('Partners Equity','Retained Earnings','Dividend Paid') then 'Equity'\n            when category in ('Advertising and Promotion Expense','Other Operating Expense','Cost of Sales Revenue', 'Professional Services Expense','Cost of Services Revenue','Payroll Expense','Payroll Taxes','Travel Expense','Cost of Goods Sold','Other Expenses','Compensation Expense','Federal Tax','Depreciation Expense') then 'Expense'\n            when category in ('Accounts Payable','Other Current Liabilities','Accrued Liabilities','Note Payable - Current','Deferred Taxes Liabilities - Long Term','Note Payable - Long Term','Other Liabilities','Deferred Revenue - Current') then 'Liability'\n            when category in ('Revenue','Revenue - Sales','Dividend Income','Revenue - Other','Other Income','Revenue - Services','Revenue - Products') then 'Revenue'\n            when (normal_balance = 'debit' and account_type = 'balancesheet') and category not in ('Inventory','Fixed Assets','Other Current Assets','Cash and Cash Equivalents','Intercompany Receivable','Accounts Receivable','Deposits and Prepayments','Goodwill','Intangible Assets','Short-Term Investments','Inventory','Accumulated Depreciation','Other Assets','Unrealized Currency Gain/Loss','Patents','Investment in Subsidiary','Escrows and Reserves','Long Term Investments') then 'Asset'\n            when (normal_balance = 'debit' and account_type = 'incomestatement') and category not in ('Advertising and Promotion Expense','Other Operating Expense','Cost of Sales Revenue', 'Professional Services Expense','Cost of Services Revenue','Payroll Expense','Payroll Taxes','Travel Expense','Cost of Goods Sold','Other Expenses','Compensation Expense','Federal Tax','Depreciation Expense') then 'Expense'\n            when (normal_balance = 'credit' and account_type = 'balancesheet' and category not in ('Accounts Payable','Other Current Liabilities','Accrued Liabilities','Note Payable - Current','Deferred Taxes Liabilities - Long Term','Note Payable - Long Term','Other Liabilities','Deferred Revenue - Current') or category not in ('Partners Equity','Retained Earnings','Dividend Paid')) then 'Liability'\n            when (normal_balance = 'credit' and account_type = 'incomestatement') and category not in ('Revenue','Revenue - Sales','Dividend Income','Revenue - Other','Other Income','Revenue - Services','Revenue - Products') then 'Revenue'\n        end as classification,\n        normal_balance, \n        title as account_title\n\n        --The below script allows for pass through columns.\n        \n    from gl_account\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"int_sage_intacct__account_classifications\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.007577Z", "completed_at": "2024-05-14T15:58:07.011358Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.012656Z", "completed_at": "2024-05-14T15:58:07.012660Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009994029998779297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__gl_account_gl_account_id.23d60f53d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gl_account_id\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_account\"\nwhere gl_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.014046Z", "completed_at": "2024-05-14T15:58:07.017251Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.017785Z", "completed_at": "2024-05-14T15:58:07.017790Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005258083343505859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__gl_account_gl_account_id.cde46d65d0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    gl_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_account\"\nwhere gl_account_id is not null\ngroup by gl_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.801930Z", "completed_at": "2024-05-14T15:58:07.044185Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.044732Z", "completed_at": "2024-05-14T15:58:07.044738Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2726249694824219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_batch", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_batch_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    baselocation\n    \n as \n    \n    baselocation\n    \n, \n    \n    \n    baselocation_no\n    \n as \n    \n    baselocation_no\n    \n, \n    \n    \n    batch_date\n    \n as \n    \n    batch_date\n    \n, \n    \n    \n    batch_title\n    \n as \n    \n    batch_title\n    \n, \n    \n    \n    batchno\n    \n as \n    \n    batchno\n    \n, \n    \n    \n    createdby\n    \n as \n    \n    createdby\n    \n, \n    \n    \n    journal\n    \n as \n    \n    journal\n    \n, \n    \n    \n    megaentityid\n    \n as \n    \n    megaentityid\n    \n, \n    \n    \n    megaentitykey\n    \n as \n    \n    megaentitykey\n    \n, \n    \n    \n    megaentityname\n    \n as \n    \n    megaentityname\n    \n, \n    \n    \n    modified\n    \n as \n    \n    modified\n    \n, \n    \n    \n    modifiedby\n    \n as \n    \n    modifiedby\n    \n, \n    \n    \n    modifiedbyid\n    \n as \n    \n    modifiedbyid\n    \n, \n    \n    \n    module\n    \n as \n    \n    module\n    \n, \n    \n    \n    prbatchkey\n    \n as \n    \n    prbatchkey\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    referenceno\n    \n as \n    \n    referenceno\n    \n, \n    \n    \n    reversed\n    \n as \n    \n    reversed\n    \n, \n    \n    \n    reversedfrom\n    \n as \n    \n    reversedfrom\n    \n, \n    \n    \n    reversedkey\n    \n as \n    \n    reversedkey\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    taximplications\n    \n as \n    \n    taximplications\n    \n, \n    \n    \n    templatekey\n    \n as \n    \n    templatekey\n    \n, \n    \n    \n    userinfo_loginid\n    \n as \n    \n    userinfo_loginid\n    \n, \n    \n    \n    userkey\n    \n as \n    \n    userkey\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        baselocation as base_location,\n        baselocation_no as base_location_no,\n        batch_date,\n        batch_title,\n        batchno as batch_no,\n        createdby as created_by,\n        journal,\n        megaentityid as mega_entity_id,\n        megaentitykey as mega_entity_key,\n        megaentityname as mega_entity_name,\n        modified,\n        modifiedby as modified_by,\n        modifiedbyid as modified_by_id,\n        module,\n        prbatchkey as pr_batch_key,\n        recordno as record_no,\n        referenceno as reference_no,\n        reversed,\n        reversedfrom as reversed_from,\n        reversedkey as reversed_key,\n        state,\n        taximplications as tax_implications,\n        templatekey as template_key,\n        userinfo_loginid as user_info_login_id,\n        userkey as user_key,\n        whencreated as when_created,\n        whenmodified as when_modified\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_batch\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.076835Z", "completed_at": "2024-05-14T15:58:07.082715Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.083622Z", "completed_at": "2024-05-14T15:58:07.083628Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008717060089111328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__gl_batch_record_no.3a48362967", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect record_no\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_batch\"\nwhere record_no is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.079827Z", "completed_at": "2024-05-14T15:58:07.083338Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.084641Z", "completed_at": "2024-05-14T15:58:07.084644Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009123086929321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__gl_batch_record_no.44cae4a3d2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    record_no as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_batch\"\nwhere record_no is not null\ngroup by record_no\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:06.810074Z", "completed_at": "2024-05-14T15:58:07.073270Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.074567Z", "completed_at": "2024-05-14T15:58:07.074572Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.29062986373901367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_detail", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_detail_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accountno\n    \n as \n    \n    accountno\n    \n, \n    \n    \n    accounttitle\n    \n as \n    \n    accounttitle\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    cast(null as TEXT) as \n    \n    basecurr\n    \n , \n    \n    \n    batch_date\n    \n as \n    \n    batch_date\n    \n, \n    \n    \n    batch_no\n    \n as \n    \n    batch_no\n    \n, \n    \n    \n    batch_title\n    \n as \n    \n    batch_title\n    \n, \n    \n    \n    batchkey\n    \n as \n    \n    batchkey\n    \n, \n    \n    \n    bookid\n    \n as \n    \n    bookid\n    \n, \n    cast(null as TEXT) as \n    \n    classid\n    \n , \n    cast(null as TEXT) as \n    \n    classname\n    \n , \n    \n    \n    creditamount\n    \n as \n    \n    creditamount\n    \n, \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    \n    \n    customerid\n    \n as \n    \n    customerid\n    \n, \n    \n    \n    customername\n    \n as \n    \n    customername\n    \n, \n    \n    \n    debitamount\n    \n as \n    \n    debitamount\n    \n, \n    cast(null as TEXT) as \n    \n    departmentid\n    \n , \n    cast(null as TEXT) as \n    \n    departmenttitle\n    \n , \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    docnumber\n    \n as \n    \n    docnumber\n    \n, \n    cast(null as TEXT) as \n    \n    document\n    \n , \n    \n    \n    entry_date\n    \n as \n    \n    entry_date\n    \n, \n    \n    \n    entry_state\n    \n as \n    \n    entry_state\n    \n, \n    \n    \n    entrydescription\n    \n as \n    \n    entrydescription\n    \n, \n    \n    \n    line_no\n    \n as \n    \n    line_no\n    \n, \n    cast(null as TEXT) as \n    \n    locationid\n    \n , \n    cast(null as TEXT) as \n    \n    locationname\n    \n , \n    cast(null as timestamp) as \n    \n    modified\n    \n , \n    cast(null as TEXT) as \n    \n    prdescription\n    \n , \n    \n    \n    recordid\n    \n as \n    \n    recordid\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    totaldue\n    \n as \n    \n    totaldue\n    \n, \n    \n    \n    totalentered\n    \n as \n    \n    totalentered\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    tr_type\n    \n as \n    \n    tr_type\n    \n, \n    \n    \n    trx_amount\n    \n as \n    \n    trx_amount\n    \n, \n    \n    \n    trx_creditamount\n    \n as \n    \n    trx_creditamount\n    \n, \n    \n    \n    trx_debitamount\n    \n as \n    \n    trx_debitamount\n    \n, \n    \n    \n    vendorid\n    \n as \n    \n    vendorid\n    \n, \n    \n    \n    vendorname\n    \n as \n    \n    vendorname\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whendue\n    \n as \n    \n    whendue\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n, \n    \n    \n    whenpaid\n    \n as \n    \n    whenpaid\n    \n\n\n\n        --The below script allows for pass through columns.\n        \n        \n    from base\n),\n\nfinal as (\n    \n    select \n        recordno as gl_detail_id,\n        cast(accountno as TEXT) as account_no,\n        accounttitle as account_title,\n        amount,\n        batch_date,\n        batch_no,\n        batch_title,\n        batchkey as batch_key,\n        bookid as book_id,\n        classid as class_id,\n        classname as class_name,\n        creditamount as credit_amount,\n        debitamount as debit_amount,\n        currency,\n        customerid as customer_id,\n        customername as customer_name,\n        departmentid as department_id,\n        departmenttitle as department_title,\n        description,\n        docnumber as doc_number,\n        entry_date as entry_date_at,\n        entry_state,\n        entrydescription as entry_description,\n        line_no,\n        locationid as location_id,\n        locationname as location_name,\n        prdescription as pr_description,\n        recordid as record_id,\n        recordtype as record_type,\n        totaldue as total_due,\n        totalentered as total_entered,\n        totalpaid as total_paid,\n        tr_type,\n        trx_amount,\n        trx_creditamount as trx_credit_amount,\n        trx_debitamount as trx_debit_amount,\n        vendorid as vendor_id,\n        vendorname as vendor_name,\n        whencreated as created_at,\n        whendue as due_at,\n        whenmodified as modified_at,\n        whenpaid as paid_at\n\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_detail\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.106456Z", "completed_at": "2024-05-14T15:58:07.112590Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.114127Z", "completed_at": "2024-05-14T15:58:07.114131Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009901285171508789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__gl_detail_gl_detail_id.7aacb98523", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gl_detail_id\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_detail\"\nwhere gl_detail_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.109363Z", "completed_at": "2024-05-14T15:58:07.113450Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.115447Z", "completed_at": "2024-05-14T15:58:07.115451Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02103400230407715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__gl_detail_gl_detail_id.7b9b06a0f4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    gl_detail_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_detail\"\nwhere gl_detail_id is not null\ngroup by gl_detail_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.115713Z", "completed_at": "2024-05-14T15:58:07.127199Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.127716Z", "completed_at": "2024-05-14T15:58:07.127719Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014415979385375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.sage_intacct__general_ledger", "compiled": true, "compiled_code": "with  __dbt__cte__int_sage_intacct__active_gl_detail as (\n\n\nwith gl_detail as (\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_detail\" \n\n), gl_batch as (\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"stg_sage_intacct__gl_batch\" \n\n), final as (\n    select\n        gl_detail.*,\n        gl_batch._fivetran_deleted\n    from gl_detail\n    left join gl_batch \n        on gl_batch.record_no = gl_detail.batch_key\n    where not coalesce(gl_batch._fivetran_deleted, false) \n)\n\nselect *\nfrom final\n), gl_detail as (\n    select * \n    from __dbt__cte__int_sage_intacct__active_gl_detail \n),\n\ngl_account as (\n    select * \n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"int_sage_intacct__account_classifications\" \n),\n\ngeneral_ledger as (\n\n    select \n\n    gld.gl_detail_id,\n    gld.account_no,\n    gld.account_title,\n    round(cast(gld.amount as numeric(28,6)),2) as amount,\n    gld.book_id,\n    gld.credit_amount,\n    gld.debit_amount,\n    gld.currency,\n    gld.description,\n    gld.doc_number,\n    gld.customer_id,\n    gld.customer_name,\n    gld.entry_date_at,\n    gld.entry_state,\n    gld.entry_description,\n    gld.line_no,\n    gld.record_id,\n    gld.record_type,\n    gld.total_due,\n    gld.total_entered,\n    gld.total_paid,\n    gld.tr_type,\n    gld.trx_amount,\n    gld.trx_credit_amount,\n    gld.trx_debit_amount,\n    gld.vendor_id,\n    gld.vendor_name,\n    gld.created_at,\n    gld.due_at,\n    gld.modified_at,\n    gld.paid_at,\n    gla.category,\n    gla.classification,\n    gla.account_type \n\n    --The below script allows for pass through columns.\n    \n\n    \n\n    from gl_detail gld\n    left join gl_account gla\n        on gld.account_no = gla.account_no \n)\n\nselect * \nfrom general_ledger", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.142672Z", "completed_at": "2024-05-14T15:58:07.145834Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.146392Z", "completed_at": "2024-05-14T15:58:07.146399Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016957998275756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct.unique_sage_intacct__general_ledger_gl_detail_id.ff3dbdb705", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    gl_detail_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger\"\nwhere gl_detail_id is not null\ngroup by gl_detail_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.139141Z", "completed_at": "2024-05-14T15:58:07.146651Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.147773Z", "completed_at": "2024-05-14T15:58:07.147776Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018398761749267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct.not_null_sage_intacct__general_ledger_gl_detail_id.b6bbbe1af6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gl_detail_id\nfrom \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger\"\nwhere gl_detail_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.131216Z", "completed_at": "2024-05-14T15:58:07.490187Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.490728Z", "completed_at": "2024-05-14T15:58:07.490736Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3853487968444824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.int_sage_intacct__general_ledger_date_spine", "compiled": true, "compiled_code": "with spine as (\n\n    \n    \n    \n    \n        \n            \n\n        \n\n    \n\n    \n    \n\n    \n\n     \n    \n        \n    \n        \n\n    \n    \n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 30.0\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2021-12-01' as date) + ((interval '1 month') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_month\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_month <= \n\n    cast('2024-05-14' as date) + ((interval '1 month') * (1))\n\n\n\n)\n\nselect * from filtered\n\n\n),\n\ngeneral_ledger as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger\"\n),\n\ndate_spine as (\n    select\n        cast(date_trunc('year', date_month) as date) as date_year,\n        cast(date_trunc('month', date_month) as date) as period_first_day,\n        cast(\n        \n\n    \n\n    date_trunc('month', date_month) + ((interval '1 month') * (1))\n\n + ((interval '1 day') * (-1))\n\n\n        as date) as period_last_day,\n        row_number() over (order by cast(date_trunc('month', date_month) as date)) as period_index\n    from spine\n),\n\nfinal as (\n    select distinct\n        general_ledger.account_no,\n        general_ledger.account_title,\n        general_ledger.account_type,\n        general_ledger.book_id,\n        general_ledger.category,\n        general_ledger.classification,\n        general_ledger.currency,\n        general_ledger.entry_state,\n        date_spine.date_year,\n        date_spine.period_first_day,\n        date_spine.period_last_day,\n        date_spine.period_index\n    from general_ledger\n\n    cross join date_spine\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"int_sage_intacct__general_ledger_date_spine\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.516651Z", "completed_at": "2024-05-14T15:58:07.524228Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.524792Z", "completed_at": "2024-05-14T15:58:07.524799Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009508132934570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.int_sage_intacct__general_ledger_balances", "compiled": true, "compiled_code": "with general_ledger as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger\"\n), \n\ngl_accounting_periods as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"int_sage_intacct__general_ledger_date_spine\"\n), \n\n\ngl_period_balances_is as (\n    select \n        account_no,\n        account_title,\n        book_id,\n        category,\n        classification,\n        currency, \n        entry_state,\n        account_type,\n        cast(date_trunc('month', entry_date_at) as date) as date_month, \n        cast(date_trunc('year', entry_date_at) as date) as date_year\n\n        \n        , \n        sum(amount) as period_amount\n    from general_ledger\n    where account_type = 'incomestatement'\n    \n    group by 1,2,3,4,5,6,7,8,9,10\n\n), \n\ngl_period_balances_bs as (\n    select \n        account_no,\n        account_title,\n        book_id,\n        category,\n        classification,\n        currency,\n        entry_state,\n        account_type,\n        cast(date_trunc('month', entry_date_at) as date) as date_month, \n        cast(date_trunc('year', entry_date_at) as date) as date_year\n\n        \n        ,\n        sum(amount) as period_amount\n    from general_ledger\n    where account_type = 'balancesheet'\n    \n    group by 1,2,3,4,5,6,7,8,9,10\n\n), \n\ngl_period_balances as (\n    select *\n    from gl_period_balances_bs\n\n    union all\n\n    select *\n    from gl_period_balances_is\n\n),\n\ngl_cumulative_balances as (\n    select \n        *,\n        case\n            when account_type = 'balancesheet' then sum(period_amount) over (partition by account_no, account_title, book_id, entry_state \n                \n\n                order by date_month, account_no rows unbounded preceding)\n            else 0 \n        end as cumulative_amount   \n    from gl_period_balances\n\n), \n\ngl_beginning_balance as (\n    select \n        *,\n        case\n            when account_type = 'balancesheet' then (cumulative_amount - period_amount) \n            else 0 \n        end as period_beg_amount,\n        period_amount as period_net_amount, \n        cumulative_amount as period_ending_amount\n    from gl_cumulative_balances\n\n), \n\ngl_patch as (\n    select \n        coalesce(gl_beginning_balance.account_no, gl_accounting_periods.account_no) as account_no,\n        coalesce(gl_beginning_balance.account_title, gl_accounting_periods.account_title) as account_title,\n        coalesce(gl_beginning_balance.book_id, gl_accounting_periods.book_id) as book_id,\n        coalesce(gl_beginning_balance.category, gl_accounting_periods.category) as category,\n        coalesce(gl_beginning_balance.classification, gl_accounting_periods.classification) as classification,\n        coalesce(gl_beginning_balance.currency, gl_accounting_periods.currency) as currency,\n        coalesce(gl_beginning_balance.entry_state, gl_accounting_periods.entry_state) as entry_state,\n        coalesce(gl_beginning_balance.account_type, gl_accounting_periods.account_type) as account_type,\n        coalesce(gl_beginning_balance.date_year, gl_accounting_periods.date_year) as date_year\n\n        \n        ,\n        gl_accounting_periods.period_first_day,\n        gl_accounting_periods.period_last_day,\n        gl_accounting_periods.period_index,\n        gl_beginning_balance.period_net_amount,\n        gl_beginning_balance.period_beg_amount,\n        gl_beginning_balance.period_ending_amount,\n        case \n            when gl_beginning_balance.period_beg_amount is null and period_index = 1 then 0\n            else gl_beginning_balance.period_beg_amount\n        end as period_beg_amount_starter,\n        case\n            when gl_beginning_balance.period_ending_amount is null and period_index = 1 then 0\n            else gl_beginning_balance.period_ending_amount\n        end as period_ending_amount_starter\n    from gl_accounting_periods\n\n    left join gl_beginning_balance\n        on gl_beginning_balance.account_no = gl_accounting_periods.account_no\n            and gl_beginning_balance.account_title = gl_accounting_periods.account_title\n            and gl_beginning_balance.date_month = gl_accounting_periods.period_first_day\n            and gl_beginning_balance.book_id = gl_accounting_periods.book_id\n            and gl_beginning_balance.entry_state = gl_accounting_periods.entry_state\n            and gl_beginning_balance.currency = gl_accounting_periods.currency\n\n), \n\ngl_value_partition as (\n    select\n        *,\n        sum(case when period_ending_amount_starter is null then 0 else 1 end) over (order by account_no, account_title, book_id, entry_state, period_last_day rows unbounded preceding) as gl_partition\n    from gl_patch\n\n), \n\nfinal as (\n    select\n        account_no,\n        account_title,\n        book_id,\n        category,\n        classification,\n        currency,\n        account_type,\n        date_year, \n        entry_state,\n        period_first_day,\n        period_last_day,\n        coalesce(period_net_amount,0) as period_net_amount,\n        coalesce(period_beg_amount_starter,\n            first_value(period_ending_amount_starter) over (partition by gl_partition order by period_last_day rows unbounded preceding)) as period_beg_amount,\n        coalesce(period_ending_amount_starter,\n            first_value(period_ending_amount_starter) over (partition by gl_partition order by period_last_day rows unbounded preceding)) as period_ending_amount\n        \n        \n    from gl_value_partition\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"int_sage_intacct__general_ledger_balances\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.526839Z", "completed_at": "2024-05-14T15:58:07.530201Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.530694Z", "completed_at": "2024-05-14T15:58:07.530698Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004882097244262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.sage_intacct__general_ledger_by_period", "compiled": true, "compiled_code": "with general_ledger_balances as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"int_sage_intacct__general_ledger_balances\"\n), \n\nfinal as (\n    select \n        account_no,\n        account_title,\n        book_id,\n        category,\n        classification,\n        currency,\n        entry_state,\n        account_type,\n        date_year, \n        period_first_day,\n        period_last_day\n\n        \n        ,\n        round(cast(period_net_amount as numeric(28,6)),2) as period_net_amount,\n        round(cast(period_beg_amount as numeric(28,6)),2) as period_beg_amount,\n        round(cast(period_ending_amount as numeric(28,6)),2) as period_ending_amount\n    from general_ledger_balances\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger_by_period\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.534725Z", "completed_at": "2024-05-14T15:58:07.547834Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.549721Z", "completed_at": "2024-05-14T15:58:07.549730Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01822495460510254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.int_sage_intacct__retained_earnings", "compiled": true, "compiled_code": "with general_ledger_by_period as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger_by_period\"\n),\n\nretained_earnings_prep as (\n    select\n        period_first_day,\n        'dbt Package Generated' as account_no,\n        'Adj. Net Income' as account_title,\n        'balancesheet' as account_type,\n        book_id,\n        'Retained Earnings' as category,\n        'Equity' as classification,\n        currency,\n        entry_state,\n        sum(period_net_amount) as period_net_amount\n    from general_ledger_by_period\n    where account_type = 'incomestatement'\n    group by period_first_day, book_id, entry_state, currency\n),\n\nfinal as (\n    select\n        period_first_day,\n        account_no,\n        account_title,\n        account_type,\n        book_id,\n        category,\n        classification,\n        currency,\n        entry_state,\n        sum(period_net_amount) over (partition by book_id, entry_state, currency\n            order by period_first_day rows between unbounded preceding and current row\n        ) as amount\n    from retained_earnings_prep\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"int_sage_intacct__retained_earnings\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.537824Z", "completed_at": "2024-05-14T15:58:07.548210Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.550053Z", "completed_at": "2024-05-14T15:58:07.550057Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018262147903442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.sage_intacct__profit_and_loss", "compiled": true, "compiled_code": "with general_ledger_by_period as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger_by_period\"\n    where account_type = 'incomestatement'\n), \n\nfinal as (\n    select\n        cast (date_trunc('month', period_first_day) as date) as period_date,\n        account_no,\n        account_title,\n        account_type,\n        book_id,\n        category,\n        classification,\n        currency,\n        entry_state,\n        round(cast(period_net_amount as numeric(28,6)),2) as amount\n    from general_ledger_by_period\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__profit_and_loss\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.540690Z", "completed_at": "2024-05-14T15:58:07.548505Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.550321Z", "completed_at": "2024-05-14T15:58:07.550323Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01834273338317871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct.dbt_utils_unique_combination_of_columns_sage_intacct__general_ledger_by_period_account_no__account_title__book_id__entry_state__period_first_day__date_year__currency.a911c6d826", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_no, account_title, book_id, entry_state, period_first_day, date_year, currency\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger_by_period\"\n    group by account_no, account_title, book_id, entry_state, period_first_day, date_year, currency\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.554288Z", "completed_at": "2024-05-14T15:58:07.560465Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.561533Z", "completed_at": "2024-05-14T15:58:07.561540Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009189844131469727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct.sage_intacct__balance_sheet", "compiled": true, "compiled_code": "with general_ledger_by_period as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__general_ledger_by_period\"\n    where account_type = 'balancesheet'\n), \n\nretained_earnings as (\n    select *\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"int_sage_intacct__retained_earnings\"\n),\n\ncombine_retained_earnings as (\n    select \n        period_first_day, \n        account_no,\n        account_title,\n        account_type,\n        book_id,\n        category,\n        classification,\n        currency,\n        entry_state,\n        period_ending_amount as amount\n    from general_ledger_by_period\n\n    union all \n\n    select *\n    from retained_earnings\n),\n\nfinal as (\n    select \n        cast (date_trunc('month', period_first_day) as date) as period_date, \n        account_no,\n        account_title,\n        account_type,\n        book_id,\n        category,\n        classification,\n        currency,\n        entry_state,\n        round(cast(amount as numeric(28,6)),2) as amount\n    from combine_retained_earnings\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__balance_sheet\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.557285Z", "completed_at": "2024-05-14T15:58:07.560749Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.561797Z", "completed_at": "2024-05-14T15:58:07.561800Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00935506820678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct.dbt_utils_unique_combination_of_columns_sage_intacct__profit_and_loss_account_no__account_title__book_id__entry_state__period_date__currency.e4f294646e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_no, account_title, book_id, entry_state, period_date, currency\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__profit_and_loss\"\n    group by account_no, account_title, book_id, entry_state, period_date, currency\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-14T15:58:07.564251Z", "completed_at": "2024-05-14T15:58:07.568123Z"}, {"name": "execute", "started_at": "2024-05-14T15:58:07.568655Z", "completed_at": "2024-05-14T15:58:07.568660Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005496978759765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct.dbt_utils_unique_combination_of_columns_sage_intacct__balance_sheet_account_no__account_title__book_id__entry_state__period_date__currency.c905a92d03", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_no, account_title, book_id, entry_state, period_date, currency\n    from \"postgres\".\"sage_intacct_integration_tests_3_sage_intacct_dev\".\"sage_intacct__balance_sheet\"\n    group by account_no, account_title, book_id, entry_state, period_date, currency\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 2.355705976486206, "args": {"macro_debugging": false, "show_resource_report": false, "write_json": true, "use_colors": true, "use_colors_file": true, "quiet": false, "invocation_command": "dbt docs generate -t postgres", "enable_legacy_logger": false, "empty_catalog": false, "warn_error_options": {"include": [], "exclude": []}, "static_parser": true, "log_level": "info", "populate_cache": true, "version_check": true, "target": "postgres", "log_file_max_bytes": 10485760, "defer": false, "exclude": [], "log_level_file": "debug", "strict_mode": false, "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/sage_intacct/dbt_sage_intacct/integration_tests", "printer_width": 80, "cache_selected_only": false, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "select": [], "indirect_selection": "eager", "partial_parse_file_diff": true, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/sage_intacct/dbt_sage_intacct/integration_tests/logs", "send_anonymous_usage_stats": true, "favor_state": false, "log_format_file": "debug", "introspect": true, "static": false, "which": "generate", "print": true, "vars": {}, "partial_parse": true, "compile": true, "log_format": "default"}}